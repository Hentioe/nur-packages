diff --git HMCL/src/main/java/org/jackhuang/hmcl/setting/ConfigHolder.java HMCL/src/main/java/org/jackhuang/hmcl/setting/ConfigHolder.java
index 47459dbf..679717a8 100644
--- HMCL/src/main/java/org/jackhuang/hmcl/setting/ConfigHolder.java
+++ HMCL/src/main/java/org/jackhuang/hmcl/setting/ConfigHolder.java
@@ -91,36 +91,8 @@ public final class ConfigHolder {
     }
 
     private static Path locateConfig() {
-        Path exePath = Paths.get("");
-        try {
-            Path jarPath = Paths.get(ConfigHolder.class.getProtectionDomain().getCodeSource().getLocation()
-                    .toURI()).toAbsolutePath();
-            if (Files.isRegularFile(jarPath)) {
-                jarPath = jarPath.getParent();
-                exePath = jarPath;
-
-                Path config = jarPath.resolve(CONFIG_FILENAME);
-                if (Files.isRegularFile(config))
-                    return config;
-
-                Path dotConfig = jarPath.resolve(CONFIG_FILENAME_LINUX);
-                if (Files.isRegularFile(dotConfig))
-                    return dotConfig;
-            }
-
-        } catch (Throwable ignore) {
-        }
-
-        Path config = Paths.get(CONFIG_FILENAME);
-        if (Files.isRegularFile(config))
-            return config;
-
-        Path dotConfig = Paths.get(CONFIG_FILENAME_LINUX);
-        if (Files.isRegularFile(dotConfig))
-            return dotConfig;
-
-        // create new
-        return exePath.resolve(OperatingSystem.CURRENT_OS == OperatingSystem.WINDOWS ? CONFIG_FILENAME : CONFIG_FILENAME_LINUX);
+        Path path = Paths.get(System.getProperty("user.home"), CONFIG_FILENAME_LINUX);
+        return path;
     }
 
     private static Config loadConfig() throws IOException {
